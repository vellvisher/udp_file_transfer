import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;

import javax.swing.JFileChooser;
import javax.swing.SwingWorker;

/**
 *
 * @author v
 */
public class ClientGUI extends javax.swing.JFrame implements PropertyChangeListener {

	private static final long serialVersionUID = 218998200385134622L;
	/**
	 * Creates new form Client
	 */
	public ClientGUI() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		hostname = new javax.swing.JLabel();
		serverName = new javax.swing.JTextField();
		uploadButton = new javax.swing.JButton();
		progressBar = new javax.swing.JProgressBar();
		statusLabel = new javax.swing.JLabel();
		portLabel = new javax.swing.JLabel();
		portBox = new javax.swing.JTextField();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		hostname.setText("Hostname :");

		serverName.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				serverNameActionPerformed(evt);
			}
		});

		uploadButton.setText("Upload!");
		uploadButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				uploadButtonActionPerformed(evt);
			}
		});

		statusLabel.setText("Uploading x files...");

		portLabel.setText("Port :");

		//Layout manager

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
										.addGap(0, 0, Short.MAX_VALUE)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
														.addGap(12, 12, 12)
														.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
																		.addComponent(uploadButton)
																		.addGap(32, 32, 32))
																		.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
																				.addComponent(statusLabel)
																				.addGap(15, 15, 15)))))
																				.addGap(43, 43, 43))
																				.addGroup(layout.createSequentialGroup()
																						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																								.addComponent(hostname)
																								.addComponent(portLabel))
																								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																										.addGroup(layout.createSequentialGroup()
																												.addComponent(serverName, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addGap(0, 0, Short.MAX_VALUE))
																												.addComponent(portBox))
																												.addContainerGap())))
				);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(hostname)
								.addComponent(serverName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(portLabel)
										.addComponent(portBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
										.addComponent(uploadButton)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(statusLabel)
										.addContainerGap())
				);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void serverNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverNameActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_serverNameActionPerformed

	/**
	 * @param evt
	 */
	/**
	 * @param evt
	 */
	private void uploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadButtonActionPerformed
		JFileChooser fc = new JFileChooser();
		fc.setMultiSelectionEnabled(true);
		fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
		fc.showOpenDialog(this);
		final File[] chosenFiles = fc.getSelectedFiles();

		//Fix UI
		uploadButton.setEnabled(false);
		progressBar.setMinimum(0);
		progressBar.setMaximum(100);
		progressBar.setValue(0);
		progressBar.setVisible(true);
		statusLabel.setText(String.format("Uploading %d files...", chosenFiles.length));
		statusLabel.setVisible(true);

		// Start Running Client on files
		SwingWorker<Void, Void> uploadTask = new SwingWorker<Void, Void>() {

			@Override
			protected Void doInBackground() throws Exception {
				setProgress(0);
				int i = 0;
				for (File f : chosenFiles) {
					Client.run(f.getAbsolutePath(), serverName.getText(), Integer.parseInt(portBox.getText()));
					i++;
					setProgress(i * 100 /chosenFiles.length);
				}
				return null;
			}

			@Override
			public void done() {
			}
		};
		uploadTask.addPropertyChangeListener(this);
		uploadTask.execute();
	}//GEN-LAST:event_uploadButtonActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/*
		 * Set the Nimbus look and feel
		 */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/*
		 * Create and display the form
		 */
		java.awt.EventQueue.invokeLater(new Runnable() {

			public void run() {
				new ClientGUI().setVisible(true);
			}
		});
	}
	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel hostname;
	private javax.swing.JTextField portBox;
	private javax.swing.JLabel portLabel;
	private javax.swing.JProgressBar progressBar;
	private javax.swing.JTextField serverName;
	private javax.swing.JLabel statusLabel;
	private javax.swing.JButton uploadButton;
	// End of variables declaration//GEN-END:variables
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		// Update progress bar
		if ("progress".equals(evt.getPropertyName())) {
			progressBar.setValue((Integer)evt.getNewValue());
		}
		if (progressBar.getValue() == progressBar.getMaximum()) {
			// When completed upload
			statusLabel.setText("Uploaded files!");
			uploadButton.setEnabled(true);
		}
	}
}
